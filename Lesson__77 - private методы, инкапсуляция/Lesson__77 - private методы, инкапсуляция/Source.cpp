#include <iostream>

using namespace std;

/*В этом примере мы создадим скрытый функционал(метод) в модификаторе доступа private, который будет модулировать
проверку напряжения в нашей кофемолке. Если напряжение есть - кофемолка будет запускаться, если нету, кофемолка запускаться
не будет. Помещяем этот метод в private, т.к. у нас не вольтметр, а кофемолка. Почти в каждой вещи вокруг есть скрытый функционал, 
который стороннему пользователю видеть нельзя/не обязательно.
*/

class coffeeGrinder
{
private:
	bool Voltage()
	{
		return true;									//В зависимости от true либо false, наша программа будет работать
	}													//По-разному. И на этот функционал никто не сможет повлиять

public:
	void Start() 
	{
		bool isVoltageNormal = Voltage();

		if (isVoltageNormal)							//Т.к. if работает с булевым условием, можно сразу написать 
		{												//if (Voltage()) - функция вернет либо true, либо false
			cout << "Кофемолка работает" << endl;
		}
		else
		{
			cout << "Кофемолка не включается" << endl;
		}
	}
};

int main()
{
	setlocale(LC_ALL, "ru");

	coffeeGrinder BoschMKM;
	BoschMKM.Start();

	return 0;
}