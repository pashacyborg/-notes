#include <iostream>

using namespace std;

//#define DEBUG			//for case 1, 2, 3
#define DEBUG 228

//Если комментируем объявление директивы - код внутри ifdef исчезнет(информация для разработчика)

/*#define MASLO - определять масло. ifdef MASLO - если определено масло. endif - определяет где конец области видимости
директивы ifdef. 
Допустим мы обернули кусок кода в ifdef - endif. Затем закомментировали наш макрос #define MASLO. Этим
действием мы спрятали(грубо говоря закомментировали) все куски кода, которые заключены в директивах ifdef - endif.
Если мы раскомментируем объявление нашего макроса, то все строчки кода(служебная информация) снова станет видна

Мы можем делать ветвление с конструкцией #ifdef MASLO - #else - #endif. Если директива определена(не закомментирована; работает),
то выполнится тот кусок кода, который идет сразу за ifdef. Если не определена, то выполнится та часть кода, 
которая идет после #else. Это круто (case 2)

Есть разновидность директивы ifdef - ifndef(if not define). Которая истина в том случае, если директива не определена, 
другими словами то же самое что и ifdef, но наоборот (case 3)

Еще одна вариация ifdef - if. Она работает не конкретно с директивой, а с ее константным значением: 
#define MASLO 228. #if MASLO < 228 ... - код выполнится (case 4)

Еще одна вариация else - elif(аналогия с else if). Т.е. если код не прошел первую проверку, переходит ко второй проверке
(а не тупо выполняет код как в простом else) (case 5)
*/

void main()
{
	setlocale(LC_ALL, "ru");
#ifdef DEBUG
	cout << "Начало цикла" << endl;
#endif // DEBUG


	for (int i = 0; i < 5; i++)
	{
		cout << i << endl;
	}

#ifdef DEBUG
	cout << "Конец цикла" << endl;
#endif // DEBUG



#ifdef DEBUG
	cout << "Выведется первая строчка" << endl;
#else												//case 2
	cout << "Выведется вторая строчка" << endl;
#endif // DEBUG



#ifndef DEBUG
	cout << "Выведется первая строчка" << endl;
#else												//case 3
	cout << "Выведется вторая строчка" << endl;
#endif



#if DEBUG > 228
	cout << "Выведется первая строчка" << endl;
#else												//case 4
	cout << "Выведется вторая строчка" << endl;
#endif // DEBUG > 228



#if DEBUG > 228
	cout << "Выведется первая строчка" << endl;
#elif DEBUG == 228									//case 5
	cout << "Выведется вторая строчка" << endl;
#endif // DEBUG > 228
	


#ifndef DEBUG  
	cout << "Один" << endl;
#elif DEBUG == 220
	cout << "Два" << endl;
#elif DEBUG > 227 
	cout << "Три" << endl;
#endif // !DEBUG == 

}