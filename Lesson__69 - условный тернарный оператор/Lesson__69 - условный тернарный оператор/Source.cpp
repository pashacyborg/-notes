#include <iostream>

using namespace std;

/*Тернарный оператор - такой оператор, который взаимодействует с тремя операндами
Тернарный оператор реализует в себе конструкцию if-else, но только в одну строчку: a<10? действие1 : иначе действие2

Знак вопроса "?" спрашивает "ты true или false?" Если true, выполни следующий кусок кода(сразу за ?). Иначе
выполни часть кода после двоеточия

Совет: Всегда заключайте в скобки условную часть тернарного оператора, а лучше весь тернарный оператор
(потому что тернарный оператор имеет низкий приоритет, смотри последний кейс)
*/

void main()
{
	setlocale(LC_ALL, "ru");
	int a;
	//cout << "Введите значение а" << endl;
	//cin >> a;

	/*if (a > 10)
	{
		cout << "a > 10" << endl;
	}
	else
	{
		cout << "a < 10" << endl;
	}*/


	//a > 10 ? cout << "a > 10" << endl : cout << "a < 10" << endl;		//Условная конструкция в одну строку
	//
	//(a < 5) ? (a = a * a) : (a = 228);
	//cout << a;


	//if (a > 10)
	//{
	//	cout << "a > 10" << endl;
	//}
	//else
	//{
	//	if (a < 10)
	//	{
	//		cout << "a < 10" << endl;
	//	}
	//	else														case 2
	//	{
	//		cout << "a = 10" << endl;
	//	}
	//}

	//																//Пример с вложенными циклами

	////Реализуем такую же конструкцию с помощью тернарного оператора: 
	//(a > 10) ? (cout << "a > 10" << endl) : (a < 10) ? (cout << "a < 10" << endl) : (cout << "a = 10");

/*
	int x = 15;
	int y = 10;		*/					//case 4

	//cout << (x > y) ? x : y;			//Выведется не то что мы хотим. Выведется 0, т.к. х не больше у.
										//Тернарный оператор имеет низкий приоритет, поэтому сначала будет то, 
										//что в скобках. Затем cout. Затем тернарный оператор
										//Чтобы исправить ошибку, надо заключить весь тернарный оператор в скобки

	//cout << ((x > y) ? x : y);


	int x, y, larger;
	cout << "Введите х: " << endl;
	cin >> x;
	cout << "Введите y: " << endl;
	cin >> y;

	larger = (x > y) ? x : y;
	cout << larger << endl;
}
