#include <iostream>

using namespace std;

/*Указатель на базовый класс может хранить любого из своих потомков.
A *bptr = new B; - Означает, что мы присвоили в указатель типа базового класса ссылку класса наследника, 
которая хранится в данамической памяти.

В случае хранения класса-наследника в указателе на базовый класс, обязательно нужно деструктор базового класса делать
виртуальным. Если этого не сделать - деструктор класса b не вызовется и мы получим утечку памяти. 
*/

class A
{
public:
	A()
	{
		cout << "Выделена динамическая память под класс A" << endl;
	}

	virtual ~A()
	{
		cout << "Динамическая память класса A очищена" << endl;
	}
};

class B : public A
{
public:
	B()
	{
		cout << "Выделена динамическая память под класс B" << endl;
	}

	~B() override
	{
		cout << "Динамическая память класса B очищена" << endl;
	}
};

int main()
{
	setlocale(LC_ALL, "ru");

	//B* ptrb = new B;	//создадутся 2 объекта, удалятся 2 объекта
	//delete ptrb;
	A* ptra = new B;	//создадутся 2 объекта, удалится только объект A(т.к. указатель на объект A)
	delete ptra;

	return 0;
}